12018年8月7日23:23:32
可用 stack实现，也可用vector。其实 vector和stack一模一样。
push_back -> push
pop_back -> pop
取v[v.size() - 1] -> top



class MinStack {
public:
    /** initialize your data structure here. */
    vector<int> stack; 
    vector<int> minStack;
    int min; 
    MinStack() {

    }
    
    void push(int x) {
        stack.push_back(x);
        if (minStack.empty() || x <= minStack[minStack.size() - 1])
            minStack.push_back(x); 
    }
    
    void pop() {
        if (stack[stack.size() - 1] == minStack[minStack.size() - 1])
            minStack.pop_back();
        stack.pop_back();
    }
    
    int top() {
        return stack[stack.size() - 1]; 
    }
    
    int getMin() {
        return minStack[minStack.size() - 1]; 
    }
};

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack obj = new MinStack();
 * obj.push(x);
 * obj.pop();
 * int param_3 = obj.top();
 * int param_4 = obj.getMin();
 */
