先sort，
然后two sum
需要注意重复元素要skip掉
class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        //
        vector<vector<int>> res; 
        // first sort 
        sort(nums.begin(), nums.end()); 
        for(int i = 0; i < nums.size(); i++){
            // skip the duplicated one 
            if(i > 0 && nums[i] == nums[i - 1]){
                continue; 
            }
            //two sum as -nums[i]
            int left = i + 1; 
            int right = nums.size() - 1; 
            int target = -nums[i];
            while(left < right){
                int sum = nums[left] + nums[right];
                if(sum == target){
                    vector<int> resElement; 
                    resElement.push_back(nums[i]);
                    resElement.push_back(nums[left]);
                    resElement.push_back(nums[right]);
                    res.push_back(resElement); 
                    while(left + 1 < nums.size() && nums[left + 1] == nums[left]){
                        left++; 
                    }
                    while(right - 1 > 0 && nums[right - 1] == nums[right]){
                        right--;
                    }
                    left++;
                    right--;
                }
                else if(sum < target){
                    left++;
                }
                else{
                    right--; 
                }

            }
        }
        return res; 
    }
};
