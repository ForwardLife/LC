
2018年8月10日00:23:37
DP经典
class Solution {
public:
    int climbStairs(int n) {
        //DP 
        //State: f[i] ways to climb i
        //transition: f[i] = f[i-1] + f[i-2]
        //initial f[1] = 1; f[2] = 2;
        vector<int> f(n+1);
        f[1] = 1;
        f[2] = 2;
        for (int i = 3; i <= n; i++){
            f[i] = f[i - 1] + f[i - 2];
        }
        return f[n]; 
    }
};
空间优化 O(N) -> O(1).
凡是只求一个最值结果的，或最后一步结果的，中间结果都不需保存。空间可优化为O(1)。
方法就是先写出状态方程，然后用一两个但变量替代状态向量。
class Solution {
public:
    int climbStairs(int n) {
        //DP 
        //State: f[i] ways to climb i
        //transition: f[i] = f[i-1] + f[i-2]
        //initial f[1] = 1; f[2] = 2;
        //vector<int> f(n+1);
        //f[1] = 1;
        int a = 1;
        //f[2] = 2;
        int b = 2;
        if (n == 1){
            return a;
        }
        if (n == 2){
            return b;
        }
        int c;
        for (int i = 3; i <= n; i++){
            //f[i] = f[i - 1] + f[i - 2];
            c = a + b; 
            a = b;
            b = c; 
        }
        return c; 
    }
};
